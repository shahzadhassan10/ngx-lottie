!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("@angular/platform-browser"),require("path"),require("rxjs/operators"),require("ngx-lottie"),require("fs"),require("rxjs")):"function"==typeof define&&define.amd?define("ngx-lottie/server",["exports","@angular/core","@angular/platform-browser","path","rxjs/operators","ngx-lottie","fs","rxjs"],r):r((e["ngx-lottie"]=e["ngx-lottie"]||{},e["ngx-lottie"].server={}),e.ng.core,e.ng.platformBrowser,e.path,e.rxjs.operators,e["ngx-lottie"],e.fs,e.rxjs)}(this,function(e,r,s,a,f,p,l,c){"use strict";function t(i,a,t){for(var u=[],e=function(r,e){var n=function o(e){return new c.Observable(function(n){l.readFile(e,{encoding:"utf-8"},function(e,r){e?n.error(e):n.next(r),n.complete()})})}(t[r]).pipe(f.tap(function(e){!function t(e,r,n){r=p.transformAnimationFilenameToKey(r);var o=s.makeStateKey(r);e.set(o,JSON.parse(n))}(i,a[r],e)}));u.push(n)},r=0,n=a.length;r<n;r++)e(r);return u}function n(e,r){var n=function i(e){var r=e.preloadAnimations,n=r.folder,o=r.animations,t=a.join(process.cwd(),n);return o.map(function(e){return a.join(t,e)})}(e),o=t(r,e.preloadAnimations.animations,n);return function(){return c.forkJoin(o).toPromise()}}var o=new r.InjectionToken("LOTTIE_SERVER_OPTIONS"),i=(u.forRoot=function(e){return{ngModule:u,providers:[{provide:o,useValue:e},{provide:r.APP_INITIALIZER,useFactory:n,multi:!0,deps:[o,s.TransferState]}]}},u.decorators=[{type:r.NgModule}],u);function u(){}e.LottieServerModule=i,e.ɵb=n,e.ɵa=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-lottie-server.umd.min.js.map