{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-lottie/src/internals.ts","ng://ngx-lottie/src/core/directives/base.directive.ts","ng://ngx-lottie/src/core/services/lottie-events.service.ts","ng://ngx-lottie/src/core/directives/lottie.directive.ts","ng://ngx-lottie/src/core/components/lottie.component.ts","ng://ngx-lottie/src/lottie.module.ts","ng://ngx-lottie/src/utils.ts","ng://ngx-lottie/src/core/services/lottie-transfer-state.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__read","o","m","r","i","ar","error","loadAnimation","zone","options","container","resolveOptions","defaulOptions","renderer","loop","autoplay","assign","import","player","_a","runOutsideAngular","eventsMap","complete","loopComplete","enterFrame","segmentStart","config_ready","data_ready","data_failed","loaded_images","DOMLoaded","destroy","getEventEmitterFromDirectiveInstance","instance","name","mapEventToCamelCase","lottieEvents","BaseDirective","ref","platformId","lottieEventsService","isPlatformServer","animationItem","animationCreated","setAnimationItemAndLottieEventListeners","detach","Directive","args","selector","Input","Output","containerClass","styles","width","height","EventEmitter","configReady","dataReady","dataFailed","loadedImages","domLoaded","LottieEventsService","ngOnDestroy","dispose","emit","_this","setupLottieEventListeners","forEach","setupLottieEventListener","emitter","listener","event","addEventListener","listeners","set","_b","__values","tslib_1.__values","entries","_c","_d","name_1","callback","removeEventListener","clear","Injectable","NgZone","Inject","PLATFORM_ID","Map","tslib_1.__extends","LottieDirective","ngOnInit","_super","host","nativeElement","providers","ChangeDetectorRef","decorators","type","Self","ElementRef","LottieComponent","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","ViewChild","LottieModule","NgModule","imports","CommonModule","declarations","exports","transformAnimationFilenameToKey","animation","split","LottieTransferState","get","key","makeStateKey","state","providedIn","TransferState"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgZone, EventEmitter } from '@angular/core';\n\nimport {\n  LottieOptions,\n  Lottie,\n  LottieEventName,\n  AnimationItem,\n  MappedLottieEventName,\n  LottieEvent\n} from './symbols';\nimport { BaseDirective } from './core/directives/base.directive';\n\nconst getLottiePlayer = (): Promise<Lottie> => {\n  return import(/* webpackChunkName: 'lottie' */ 'lottie-web/build/player/lottie.js');\n};\n\nfunction resolveOptions(options: LottieOptions | null, container: HTMLElement): LottieOptions {\n  const defaulOptions: LottieOptions = {\n    container,\n    renderer: 'svg',\n    loop: true,\n    autoplay: true\n  };\n\n  return Object.assign(defaulOptions, options);\n}\n\nexport async function loadAnimation(\n  zone: NgZone,\n  options: LottieOptions | null,\n  container: HTMLElement\n): Promise<AnimationItem> {\n  options = resolveOptions(options, container);\n  const player = await getLottiePlayer();\n  return zone.runOutsideAngular(() => player.loadAnimation(options!));\n}\n\n/**\n * Some dispatched events are in the `snake_case` registry, for convenience,\n * we create this object that will map event name to the `camelCase` registry\n */\nconst eventsMap: { [key in LottieEventName]: MappedLottieEventName } = {\n  complete: 'complete',\n  loopComplete: 'loopComplete',\n  enterFrame: 'enterFrame',\n  segmentStart: 'segmentStart',\n  config_ready: 'configReady',\n  data_ready: 'dataReady',\n  data_failed: 'dataFailed',\n  loaded_images: 'loadedImages',\n  DOMLoaded: 'domLoaded',\n  destroy: 'destroy'\n};\n\n/**\n * @param name - Name of the event in the `snake_case` dispatched by Lottie\n * @returns - Resolved event name in the `camelCase`\n */\nfunction mapEventToCamelCase(name: LottieEventName): MappedLottieEventName {\n  return eventsMap[name];\n}\n\nexport function getEventEmitterFromDirectiveInstance(\n  instance: BaseDirective,\n  name: LottieEventName\n) {\n  return instance[mapEventToCamelCase(name)] as EventEmitter<LottieEvent>;\n}\n\n/**\n * Events that can be dispatched by `Animationitem`\n * @see https://github.com/airbnb/lottie-web#events\n */\nexport const lottieEvents: ReadonlyArray<LottieEventName> = [\n  'complete',\n  'loopComplete',\n  'enterFrame',\n  'segmentStart',\n  'config_ready',\n  'data_ready',\n  'data_failed',\n  'loaded_images',\n  'DOMLoaded',\n  'destroy'\n];\n","import { Directive, Input, Output, EventEmitter, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { loadAnimation } from '../../internals';\nimport { LottieEventsService } from '../services/lottie-events.service';\nimport {\n  LottieOptions,\n  LottieCSSStyleDeclaration,\n  AnimationItem,\n  BMCompleteEvent,\n  BMCompleteLoopEvent,\n  BMEnterFrameEvent,\n  BMSegmentStartEvent,\n  BMDestroyEvent,\n  LottieContainerClass\n} from '../../symbols';\n\n@Directive({ selector: '[lottie]' })\nexport class BaseDirective {\n  @Input()\n  public options: LottieOptions | null = null;\n\n  @Input()\n  public containerClass: LottieContainerClass = null;\n\n  @Input()\n  public styles: LottieCSSStyleDeclaration | null = null;\n\n  @Input()\n  public width: string = null!;\n\n  @Input()\n  public height: string = null!;\n\n  @Input()\n  public detach = false;\n\n  /**\n   * `animationCreated` is dispatched after calling `loadAnimation`\n   */\n  @Output()\n  public readonly animationCreated = new EventEmitter<AnimationItem>();\n\n  /**\n   * `complete` is dispatched after completing the last frame\n   */\n  @Output()\n  public readonly complete = new EventEmitter<BMCompleteEvent>();\n\n  /**\n   * `loopComplete` is dispatched after completing frame loop\n   */\n  @Output()\n  public readonly loopComplete = new EventEmitter<BMCompleteLoopEvent>();\n\n  /**\n   * `enterFrame` is dispatched after entering the new frame\n   */\n  @Output()\n  public readonly enterFrame = new EventEmitter<BMEnterFrameEvent>();\n\n  /**\n   * `segmentStart` is dispatched when the new segment is adjusted\n   */\n  @Output()\n  public readonly segmentStart = new EventEmitter<BMSegmentStartEvent>();\n\n  /**\n   * Original event name is `config_ready`. `config_ready` is dispatched\n   * after the needed renderer is configured\n   */\n  @Output()\n  public readonly configReady = new EventEmitter<void>();\n\n  /**\n   * Original event name is `data_ready`. `data_ready` is dispatched\n   * when all parts of the animation have been loaded\n   */\n  @Output()\n  public readonly dataReady = new EventEmitter<void>();\n\n  /**\n   * Original event name is `data_failed`. `data_failed` can be dispatched\n   * if the `XMLHttpRequest`, that tried to load animation data using\n   * provided `path`, has errored\n   */\n  @Output()\n  public readonly dataFailed = new EventEmitter<void>();\n\n  /**\n   * Original event name is `loaded_images`. `loaded_images` can be\n   * dispatched after all assets are preloaded\n   */\n  @Output()\n  public readonly loadedImages = new EventEmitter<void>();\n\n  /**\n   * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n   * when elements have been added to the DOM\n   */\n  @Output()\n  public readonly domLoaded = new EventEmitter<void>();\n\n  /**\n   * `destroy` will be dispatched in the `ngOnDestroy` hook of the service,\n   * it's useful for releasing resources\n   */\n  @Output()\n  public readonly destroy = new EventEmitter<BMDestroyEvent>();\n\n  protected async loadAnimation(\n    ref: ChangeDetectorRef,\n    zone: NgZone,\n    platformId: string,\n    lottieEventsService: LottieEventsService,\n    container: HTMLElement | HTMLCanvasElement,\n    instance: BaseDirective\n  ): Promise<void> {\n    if (isPlatformServer(platformId)) {\n      return;\n    }\n\n    const animationItem = await loadAnimation(zone, this.options, container);\n    lottieEventsService.animationCreated(animationItem, this.animationCreated);\n    lottieEventsService.setAnimationItemAndLottieEventListeners(animationItem, instance);\n    // Basically make this view static and never check it in the future\n    if (this.detach) {\n      ref.detach();\n    }\n  }\n}\n","import { Injectable, OnDestroy, NgZone, EventEmitter, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { AnimationItem, LottieEvent, LottieEventName } from '../../symbols';\nimport { lottieEvents, getEventEmitterFromDirectiveInstance } from '../../internals';\nimport { BaseDirective } from '../directives/base.directive';\n\n@Injectable()\nexport class LottieEventsService implements OnDestroy {\n  private animationItem: AnimationItem | null = null;\n\n  /**\n   * Save listeners so we're able to remove them from `AnimationItem`\n   * by references in the future when this service is destroyed\n   */\n  private readonly listeners = new Map<LottieEventName, (event: LottieEvent) => void>();\n\n  constructor(\n    private readonly zone: NgZone,\n    @Inject(PLATFORM_ID) private readonly platformId: string\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.dispose();\n  }\n\n  /**\n   * This method is invoked after calling `loadAnimation` and dispatches the new one\n   * created `AnimationItem` instance\n   */\n  public animationCreated(\n    animationItem: AnimationItem,\n    animationCreated: EventEmitter<AnimationItem>\n  ): void {\n    animationCreated.emit(animationItem);\n  }\n\n  public setAnimationItemAndLottieEventListeners(\n    animationItem: AnimationItem,\n    instance: BaseDirective\n  ): void {\n    this.animationItem = animationItem;\n    // `AnimationItem` triggers different events every ms, we have to listen\n    // them outside Angular's context, thus it won't affect performance\n    this.zone.runOutsideAngular(() => this.setupLottieEventListeners(instance));\n  }\n\n  private setupLottieEventListeners(instance: BaseDirective): void {\n    lottieEvents.forEach((name) => {\n      this.setupLottieEventListener(name, instance);\n    });\n  }\n\n  private setupLottieEventListener(name: LottieEventName, instance: BaseDirective): void {\n    const emitter: EventEmitter<LottieEvent> = getEventEmitterFromDirectiveInstance(instance, name);\n    const listener = (event: LottieEvent): void => emitter.emit(event);\n\n    this.animationItem!.addEventListener(name, listener);\n\n    // We don't have to save `destroy` listener, because `AnimationItem`\n    // is able to remove `destroy` event listener itself\n    if (name !== 'destroy') {\n      this.listeners.set(name, listener);\n    }\n  }\n\n  private dispose(): void {\n    if (isPlatformServer(this.platformId) || this.animationItem === null) {\n      return;\n    }\n\n    for (const [name, callback] of this.listeners.entries()) {\n      this.animationItem!.removeEventListener(name, callback);\n    }\n\n    // Release listeners as we don't need them\n    this.listeners.clear();\n\n    // We cannot call `destroy` before removing event listeners\n    // as after calling `destroy` - `removeEventListener` becomes unavailable\n    this.animationItem!.destroy();\n    this.animationItem = null;\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  ChangeDetectorRef,\n  NgZone,\n  Inject,\n  Self,\n  PLATFORM_ID,\n  ElementRef\n} from '@angular/core';\n\nimport { LottieEventsService } from '../services/lottie-events.service';\nimport { BaseDirective } from './base.directive';\n\n@Directive({\n  selector: '[lottie]',\n  providers: [LottieEventsService]\n})\nexport class LottieDirective extends BaseDirective implements OnInit {\n  constructor(\n    private readonly ref: ChangeDetectorRef,\n    private readonly zone: NgZone,\n    @Inject(PLATFORM_ID) private readonly platformId: string,\n    @Self() private readonly lottieEventsService: LottieEventsService,\n    @Self() private readonly host: ElementRef<HTMLElement>\n  ) {\n    super();\n  }\n\n  public ngOnInit(): void {\n    super.loadAnimation(\n      this.ref,\n      this.zone,\n      this.platformId,\n      this.lottieEventsService,\n      this.host.nativeElement,\n      this\n    );\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  Inject,\n  ChangeDetectorRef,\n  NgZone,\n  ElementRef,\n  ViewChild,\n  Self,\n  PLATFORM_ID\n} from '@angular/core';\n\nimport { LottieEventsService } from '../services/lottie-events.service';\nimport { BaseDirective } from '../directives/base.directive';\n\n@Component({\n  selector: 'ng-lottie',\n  template: `\n    <div\n      #container\n      [style.width.px]=\"width\"\n      [style.height.px]=\"height\"\n      style=\"margin: 0 auto\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [LottieEventsService]\n})\nexport class LottieComponent extends BaseDirective implements OnInit {\n  @ViewChild('container')\n  public container: ElementRef<HTMLElement> = null!;\n\n  constructor(\n    private readonly ref: ChangeDetectorRef,\n    private readonly zone: NgZone,\n    @Inject(PLATFORM_ID) private readonly platformId: string,\n    @Self() private readonly lottieEventsService: LottieEventsService\n  ) {\n    super();\n  }\n\n  public ngOnInit(): void {\n    super.loadAnimation(\n      this.ref,\n      this.zone,\n      this.platformId,\n      this.lottieEventsService,\n      this.container.nativeElement,\n      this\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BaseDirective } from './core/directives/base.directive';\nimport { LottieDirective } from './core/directives/lottie.directive';\nimport { LottieComponent } from './core/components/lottie.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BaseDirective, LottieDirective, LottieComponent],\n  exports: [BaseDirective, LottieDirective, LottieComponent]\n})\nexport class LottieModule {}\n","import { AnimationFilename } from './symbols';\n\nexport function transformAnimationFilenameToKey(animation: AnimationFilename): string {\n  return `animation-${animation.split('.json')[0]}`;\n}\n","import { Injectable } from '@angular/core';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\n\nimport { AnimationFilename } from '../../symbols';\nimport { transformAnimationFilenameToKey } from '../../utils';\n\n@Injectable({ providedIn: 'root' })\nexport class LottieTransferState {\n  constructor(private state: TransferState) {}\n\n  public get<T>(animation: AnimationFilename): T | null {\n    animation = transformAnimationFilenameToKey(animation);\n    const key = makeStateKey<T>(animation);\n    return this.state.get(key, null);\n  }\n}\n"]}